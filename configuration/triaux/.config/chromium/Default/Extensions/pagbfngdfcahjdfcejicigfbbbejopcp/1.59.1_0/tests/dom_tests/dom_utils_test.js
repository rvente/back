// Generated by CoffeeScript 1.12.5
(function() {
  context("DOM content loaded", should("call callback immediately.", function() {
    var called;
    called = false;
    DomUtils.documentReady(function() {
      return called = true;
    });
    return assert.isTrue(called);
  }), should("already have called callback embedded in test page.", function() {
    return assert.isTrue((window.documentReadyListenerCalled != null) && window.documentReadyListenerCalled);
  }));

  context("Check visibility", should("detect visible elements as visible", function() {
    document.getElementById("test-div").innerHTML = "<div id='foo'>test</div>";
    return assert.isTrue((DomUtils.getVisibleClientRect(document.getElementById('foo'), true)) !== null);
  }), should("detect display:none links as hidden", function() {
    document.getElementById("test-div").innerHTML = "<a id='foo' style='display:none'>test</a>";
    return assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('foo'), true));
  }), should("detect visibility:hidden links as hidden", function() {
    document.getElementById("test-div").innerHTML = "<a id='foo' style='visibility:hidden'>test</a>";
    return assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('foo'), true));
  }), should("detect elements nested in display:none elements as hidden", function() {
    document.getElementById("test-div").innerHTML = "<div style='display:none'>\n  <a id='foo'>test</a>\n</div>";
    return assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('foo'), true));
  }), should("detect links nested in visibility:hidden elements as hidden", function() {
    document.getElementById("test-div").innerHTML = "<div style='visibility:hidden'>\n  <a id='foo'>test</a>\n</div>";
    return assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('foo'), true));
  }), should("detect links outside viewport as hidden", function() {
    document.getElementById("test-div").innerHTML = "<a id='foo' style='position:absolute;top:-2000px'>test</a>\n<a id='bar' style='position:absolute;left:2000px'>test</a>";
    assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('foo'), true));
    return assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('bar'), true));
  }), should("detect links only partially outside viewport as visible", function() {
    document.getElementById("test-div").innerHTML = "<a id='foo' style='position:absolute;top:-10px'>test</a>\n<a id='bar' style='position:absolute;left:-10px'>test</a>";
    assert.isTrue((DomUtils.getVisibleClientRect(document.getElementById('foo'), true)) !== null);
    return assert.isTrue((DomUtils.getVisibleClientRect(document.getElementById('bar'), true)) !== null);
  }), should("detect links that contain only floated / absolutely-positioned divs as visible", function() {
    document.getElementById("test-div").innerHTML = "<a id='foo'>\n  <div style='float:left'>test</div>\n</a>";
    assert.isTrue((DomUtils.getVisibleClientRect(document.getElementById('foo'), true)) !== null);
    document.getElementById("test-div").innerHTML = "<a id='foo'>\n  <div style='position:absolute;top:0;left:0'>test</div>\n</a>";
    return assert.isTrue((DomUtils.getVisibleClientRect(document.getElementById('foo'), true)) !== null);
  }), should("detect links that contain only invisible floated divs as invisible", function() {
    document.getElementById("test-div").innerHTML = "<a id='foo'>\n  <div style='float:left;visibility:hidden'>test</div>\n</a>";
    return assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('foo'), true));
  }), should("detect font-size: 0; and display: inline; links when their children are display: inline", function() {
    document.getElementById("test-div").innerHTML = "<a id='foo' style='display: inline; font-size: 0px;'>\n  <div style='display: inline; font-size: 16px;'>test</div>\n</a>";
    return assert.isTrue((DomUtils.getVisibleClientRect(document.getElementById('foo'), true)) !== null);
  }), should("detect links inside opacity:0 elements as visible", function() {
    document.getElementById("test-div").innerHTML = "<div style='opacity:0'>\n  <a id='foo'>test</a>\n</div>";
    return assert.isTrue((DomUtils.getVisibleClientRect(document.getElementById('foo'), true)) !== null);
  }), should("Detect links within SVGs as visible", function() {
    document.getElementById("test-div").innerHTML = "<svg>\n  <a id='foo' xlink:href='http://www.example.com/'>\n    <text x='0' y='68'>test</text>\n  </a>\n</svg>";
    return assert.equal(null, DomUtils.getVisibleClientRect(document.getElementById('foo'), true));
  }));

}).call(this);
